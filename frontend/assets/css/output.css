/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-50: oklch(97.1% 0.013 17.38);
    --color-red-100: oklch(93.6% 0.032 17.717);
    --color-red-400: oklch(70.4% 0.191 22.216);
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-red-600: oklch(57.7% 0.245 27.325);
    --color-red-700: oklch(50.5% 0.213 27.518);
    --color-red-800: oklch(44.4% 0.177 26.899);
    --color-orange-50: oklch(98% 0.016 73.684);
    --color-orange-600: oklch(64.6% 0.222 41.116);
    --color-orange-800: oklch(47% 0.157 37.304);
    --color-yellow-500: oklch(79.5% 0.184 86.047);
    --color-yellow-700: oklch(55.4% 0.135 66.442);
    --color-green-50: oklch(98.2% 0.018 155.826);
    --color-green-100: oklch(96.2% 0.044 156.743);
    --color-green-400: oklch(79.2% 0.209 151.711);
    --color-green-500: oklch(72.3% 0.219 149.579);
    --color-green-600: oklch(62.7% 0.194 149.214);
    --color-green-700: oklch(52.7% 0.154 150.069);
    --color-green-800: oklch(44.8% 0.119 151.328);
    --color-sky-700: oklch(50% 0.134 242.749);
    --color-blue-50: oklch(97% 0.014 254.604);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-blue-700: oklch(48.8% 0.243 264.376);
    --color-blue-800: oklch(42.4% 0.199 265.638);
    --color-violet-500: oklch(60.6% 0.25 292.717);
    --color-gray-50: oklch(98.5% 0.002 247.839);
    --color-gray-100: oklch(96.7% 0.003 264.542);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-gray-700: oklch(37.3% 0.034 259.733);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-gray-900: oklch(21% 0.034 264.665);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-sm: 24rem;
    --container-lg: 32rem;
    --container-4xl: 56rem;
    --container-7xl: 80rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --font-weight-thin: 100;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --animate-spin: spin 1s linear infinite;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .collapse {
    visibility: collapse;
  }
  .invisible {
    visibility: hidden;
  }
  .visible {
    visibility: visible;
  }
  .\!fixed {
    position: fixed !important;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .inset-1 {
    inset: calc(var(--spacing) * 1);
  }
  .\!-inset-x-px {
    inset-inline: -1px !important;
  }
  .inset-x-1 {
    inset-inline: calc(var(--spacing) * 1);
  }
  .inset-y-1 {
    inset-block: calc(var(--spacing) * 1);
  }
  .end-1 {
    inset-inline-end: calc(var(--spacing) * 1);
  }
  .end-2 {
    inset-inline-end: calc(var(--spacing) * 2);
  }
  .-top-12 {
    top: calc(var(--spacing) * -12);
  }
  .-top-69 {
    top: calc(var(--spacing) * -69);
  }
  .-top-2000 {
    top: calc(var(--spacing) * -2000);
  }
  .top-4 {
    top: calc(var(--spacing) * 4);
  }
  .top-12 {
    top: calc(var(--spacing) * 12);
  }
  .\!right-2 {
    right: calc(var(--spacing) * 2) !important;
  }
  .-right-1 {
    right: calc(var(--spacing) * -1);
  }
  .right-1 {
    right: calc(var(--spacing) * 1);
  }
  .right-4 {
    right: calc(var(--spacing) * 4);
  }
  .left-1 {
    left: calc(var(--spacing) * 1);
  }
  .isolate {
    isolation: isolate;
  }
  .z-20 {
    z-index: 20;
  }
  .z-50 {
    z-index: 50;
  }
  .z-\[99\] {
    z-index: 99;
  }
  .col-span-1 {
    grid-column: span 1 / span 1;
  }
  .col-span-full {
    grid-column: 1 / -1;
  }
  .float-end {
    float: inline-end;
  }
  .float-start {
    float: inline-start;
  }
  .clear-end {
    clear: inline-end;
  }
  .clear-start {
    clear: inline-start;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .-m-2 {
    margin: calc(var(--spacing) * -2);
  }
  .-m-5 {
    margin: calc(var(--spacing) * -5);
  }
  .m-1 {
    margin: calc(var(--spacing) * 1);
  }
  .m-\[2px\] {
    margin: 2px;
  }
  .m-\[10px\] {
    margin: 10px;
  }
  .m-\[10rem\] {
    margin: 10rem;
  }
  .m-\[calc\(100\%-var\(--arbitrary\)\)\] {
    margin: calc(100% - var(--arbitrary));
  }
  .m-\[length\:var\(--mystery-var\)\] {
    margin: var(--mystery-var);
  }
  .m-auto {
    margin: auto;
  }
  .mx-auto {
    margin-inline: auto;
  }
  .my-\[2px\] {
    margin-block: 2px;
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-\[calc\(theme\(fontSize\.4xl\)\/1\.125\)\] {
    margin-top: calc(2.25rem / 1.125);
  }
  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }
  .mr-10 {
    margin-right: calc(var(--spacing) * 10);
  }
  .mr-12 {
    margin-right: calc(var(--spacing) * 12);
  }
  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .ml-3 {
    margin-left: calc(var(--spacing) * 3);
  }
  .line-clamp-1 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 1;
  }
  .line-clamp-2 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
  }
  .line-clamp-\[10\] {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 10;
  }
  .line-clamp-none {
    overflow: visible;
    display: block;
    -webkit-box-orient: horizontal;
    -webkit-line-clamp: unset;
  }
  .\!hidden {
    display: none !important;
  }
  .block {
    display: block;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .inline-block {
    display: inline-block;
  }
  .table {
    display: table;
  }
  .table-row {
    display: table-row;
  }
  .size-1 {
    width: calc(var(--spacing) * 1);
    height: calc(var(--spacing) * 1);
  }
  .size-10 {
    width: calc(var(--spacing) * 10);
    height: calc(var(--spacing) * 10);
  }
  .h-3 {
    height: calc(var(--spacing) * 3);
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-12 {
    height: calc(var(--spacing) * 12);
  }
  .h-16 {
    height: calc(var(--spacing) * 16);
  }
  .h-dvh {
    height: 100dvh;
  }
  .h-min {
    height: min-content;
  }
  .h-svh {
    height: 100svh;
  }
  .min-h-\[0\.5px\] {
    min-height: 0.5px;
  }
  .min-h-\[0\] {
    min-height: 0;
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .w-1 {
    width: calc(var(--spacing) * 1);
  }
  .w-1\/2 {
    width: calc(1/2 * 100%);
  }
  .w-4 {
    width: calc(var(--spacing) * 4);
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-12 {
    width: calc(var(--spacing) * 12);
  }
  .w-16 {
    width: calc(var(--spacing) * 16);
  }
  .w-dvw {
    width: 100dvw;
  }
  .w-fit {
    width: fit-content;
  }
  .w-full {
    width: 100%;
  }
  .w-svw {
    width: 100svw;
  }
  .max-w-0 {
    max-width: calc(var(--spacing) * 0);
  }
  .max-w-50 {
    max-width: calc(var(--spacing) * 50);
  }
  .max-w-px {
    max-width: 1px;
  }
  .max-w-sm {
    max-width: var(--container-sm);
  }
  .min-w-0 {
    min-width: calc(var(--spacing) * 0);
  }
  .min-w-50 {
    min-width: calc(var(--spacing) * 50);
  }
  .min-w-px {
    min-width: 1px;
  }
  .flex-1 {
    flex: 1;
  }
  .flex-shrink {
    flex-shrink: 1;
  }
  .shrink {
    flex-shrink: 1;
  }
  .flex-grow {
    flex-grow: 1;
  }
  .grow {
    flex-grow: 1;
  }
  .grow-\[2\] {
    flex-grow: 2;
  }
  .basis-auto {
    flex-basis: auto;
  }
  .basis-full {
    flex-basis: 100%;
  }
  .caption-bottom {
    caption-side: bottom;
  }
  .caption-top {
    caption-side: top;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .translate-x-full {
    --tw-translate-x: 100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .scale-75 {
    --tw-scale-x: 75%;
    --tw-scale-y: 75%;
    --tw-scale-z: 75%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-\[1\.7\] {
    scale: 1.7;
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .animate-spin {
    animation: var(--animate-spin);
  }
  .cursor-\[grab\] {
    cursor: grab;
  }
  .cursor-not-allowed {
    cursor: not-allowed;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .touch-pan-right {
    --tw-pan-x: pan-right;
    touch-action: var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,);
  }
  .touch-pan-x {
    --tw-pan-x: pan-x;
    touch-action: var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,);
  }
  .touch-pan-y {
    --tw-pan-y: pan-y;
    touch-action: var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,);
  }
  .touch-pinch-zoom {
    --tw-pinch-zoom: pinch-zoom;
    touch-action: var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,);
  }
  .touch-auto {
    touch-action: auto;
  }
  .touch-manipulation {
    touch-action: manipulation;
  }
  .touch-none {
    touch-action: none;
  }
  .resize {
    resize: both;
  }
  .appearance-auto {
    appearance: auto;
  }
  .appearance-none {
    appearance: none;
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .grid-cols-subgrid {
    grid-template-columns: subgrid;
  }
  .grid-rows-2 {
    grid-template-rows: repeat(2, minmax(0, 1fr));
  }
  .grid-rows-3 {
    grid-template-rows: repeat(3, minmax(0, 1fr));
  }
  .grid-rows-5 {
    grid-template-rows: repeat(5, minmax(0, 1fr));
  }
  .grid-rows-\[1fr\,auto\] {
    grid-template-rows: 1fr,auto;
  }
  .grid-rows-\[repeat\(20\,minmax\(0\,1fr\)\)\] {
    grid-template-rows: repeat(20,minmax(0,1fr));
  }
  .grid-rows-subgrid {
    grid-template-rows: subgrid;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .content-center {
    align-content: center;
  }
  .content-normal {
    align-content: normal;
  }
  .content-stretch {
    align-content: stretch;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-normal {
    justify-content: normal;
  }
  .justify-stretch {
    justify-content: stretch;
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .space-y-2 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-reverse {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 1;
    }
  }
  .space-x-1 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-reverse {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 1;
    }
  }
  .divide-x {
    :where(& > :not(:last-child)) {
      --tw-divide-x-reverse: 0;
      border-inline-style: var(--tw-border-style);
      border-inline-start-width: calc(1px * var(--tw-divide-x-reverse));
      border-inline-end-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
    }
  }
  .divide-y {
    :where(& > :not(:last-child)) {
      --tw-divide-y-reverse: 0;
      border-bottom-style: var(--tw-border-style);
      border-top-style: var(--tw-border-style);
      border-top-width: calc(1px * var(--tw-divide-y-reverse));
      border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
    }
  }
  .divide-y-reverse {
    :where(& > :not(:last-child)) {
      --tw-divide-y-reverse: 1;
    }
  }
  .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .overflow-auto {
    overflow: auto;
  }
  .overflow-x-auto {
    overflow-x: auto;
  }
  .overflow-x-hidden {
    overflow-x: hidden;
  }
  .overflow-x-scroll {
    overflow-x: scroll;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-s {
    border-start-start-radius: 0.25rem;
    border-end-start-radius: 0.25rem;
  }
  .rounded-ss {
    border-start-start-radius: 0.25rem;
  }
  .rounded-e {
    border-start-end-radius: 0.25rem;
    border-end-end-radius: 0.25rem;
  }
  .rounded-se {
    border-start-end-radius: 0.25rem;
  }
  .rounded-ee {
    border-end-end-radius: 0.25rem;
  }
  .rounded-es {
    border-end-start-radius: 0.25rem;
  }
  .rounded-t {
    border-top-left-radius: 0.25rem;
    border-top-right-radius: 0.25rem;
  }
  .rounded-l {
    border-top-left-radius: 0.25rem;
    border-bottom-left-radius: 0.25rem;
  }
  .rounded-tl {
    border-top-left-radius: 0.25rem;
  }
  .rounded-r {
    border-top-right-radius: 0.25rem;
    border-bottom-right-radius: 0.25rem;
  }
  .rounded-tr {
    border-top-right-radius: 0.25rem;
  }
  .rounded-b {
    border-bottom-right-radius: 0.25rem;
    border-bottom-left-radius: 0.25rem;
  }
  .rounded-br {
    border-bottom-right-radius: 0.25rem;
  }
  .rounded-bl {
    border-bottom-left-radius: 0.25rem;
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-l-4 {
    border-left-style: var(--tw-border-style);
    border-left-width: 4px;
  }
  .border-\[color\:rgb\(var\(--color-gray-500-rgb\)\/50\%\)\)\] {
    border-color: rgb(var(--color-gray-500-rgb)/50%);
  }
  .border-green-400 {
    border-color: var(--color-green-400);
  }
  .border-white {
    border-color: var(--color-white);
  }
  .border-white\/10 {
    border-color: color-mix(in srgb, #fff 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }
  .border-l-blue-500 {
    border-left-color: var(--color-blue-500);
  }
  .border-l-green-500 {
    border-left-color: var(--color-green-500);
  }
  .border-l-red-500 {
    border-left-color: var(--color-red-500);
  }
  .border-l-yellow-500 {
    border-left-color: var(--color-yellow-500);
  }
  .\!bg-red-500 {
    background-color: var(--color-red-500) !important;
  }
  .bg-gray-50 {
    background-color: var(--color-gray-50);
  }
  .bg-green-100 {
    background-color: var(--color-green-100);
  }
  .bg-red-100 {
    background-color: var(--color-red-100);
  }
  .bg-red-500 {
    background-color: var(--color-red-500);
  }
  .bg-red-500\/50 {
    background-color: color-mix(in srgb, oklch(63.7% 0.237 25.331) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-red-500) 50%, transparent);
    }
  }
  .bg-violet-500 {
    background-color: var(--color-violet-500);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .from-0\% {
    --tw-gradient-from-position: 0%;
  }
  .bg-\[length\:200px_100px\] {
    background-size: 200px 100px;
  }
  .bg-cover {
    background-size: cover;
  }
  .bg-\[percentage\:30\%\] {
    background-position: 30%;
  }
  .bg-repeat {
    background-repeat: repeat;
  }
  .stroke-\[hsl\(350_80\%_0\%\)\] {
    stroke: hsl(350 80% 0%);
  }
  .stroke-black {
    stroke: var(--color-black);
  }
  .stroke-1 {
    stroke-width: 1;
  }
  .stroke-2 {
    stroke-width: 2;
  }
  .stroke-\[3\] {
    stroke-width: 3;
  }
  .stroke-\[10px\] {
    stroke-width: 10px;
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-20 {
    padding: calc(var(--spacing) * 20);
  }
  .p-\[calc\(theme\(fontSize\.4xl\)\/1\.125\)_10px\] {
    padding: calc(2.25rem / 1.125) 10px;
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-10 {
    padding-inline: calc(var(--spacing) * 10);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .text-center {
    text-align: center;
  }
  .font-mono {
    font-family: var(--font-mono);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-lg\/7 {
    font-size: var(--text-lg);
    line-height: calc(var(--spacing) * 7);
  }
  .text-lg\/8 {
    font-size: var(--text-lg);
    line-height: calc(var(--spacing) * 8);
  }
  .text-lg\/none {
    font-size: var(--text-lg);
    line-height: 1;
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .text-\[0\.5px\] {
    font-size: 0.5px;
  }
  .text-\[calc\(theme\(fontSize\.4xl\)\/1\.125\)\] {
    font-size: calc(2.25rem / 1.125);
  }
  .leading-9 {
    --tw-leading: calc(var(--spacing) * 9);
    line-height: calc(var(--spacing) * 9);
  }
  .\!font-bold {
    --tw-font-weight: var(--font-weight-bold) !important;
    font-weight: var(--font-weight-bold) !important;
  }
  .\!font-medium {
    --tw-font-weight: var(--font-weight-medium) !important;
    font-weight: var(--font-weight-medium) !important;
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-normal {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .font-thin {
    --tw-font-weight: var(--font-weight-thin);
    font-weight: var(--font-weight-thin);
  }
  .text-pretty {
    text-wrap: pretty;
  }
  .text-wrap {
    text-wrap: wrap;
  }
  .break-all {
    word-break: break-all;
  }
  .hyphens-auto {
    -webkit-hyphens: auto;
    hyphens: auto;
  }
  .hyphens-manual {
    -webkit-hyphens: manual;
    hyphens: manual;
  }
  .whitespace-break-spaces {
    white-space: break-spaces;
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .text-\[\#50d71e\] {
    color: #50d71e;
  }
  .text-\[--my-0\] {
    color: --my-0;
  }
  .text-\[color\:0\] {
    color: 0;
  }
  .text-black {
    color: var(--color-black);
  }
  .text-blue-700 {
    color: var(--color-blue-700);
  }
  .text-gray-500 {
    color: var(--color-gray-500);
  }
  .text-gray-600 {
    color: var(--color-gray-600);
  }
  .text-gray-900 {
    color: var(--color-gray-900);
  }
  .text-green-700 {
    color: var(--color-green-700);
  }
  .text-red-500 {
    color: var(--color-red-500);
  }
  .text-red-600 {
    color: var(--color-red-600);
  }
  .text-red-700 {
    color: var(--color-red-700);
  }
  .text-yellow-700 {
    color: var(--color-yellow-700);
  }
  .capitalize {
    text-transform: capitalize;
  }
  .lowercase {
    text-transform: lowercase;
  }
  .uppercase {
    text-transform: uppercase;
  }
  .italic {
    font-style: italic;
  }
  .diagonal-fractions {
    --tw-numeric-fraction: diagonal-fractions;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
  }
  .lining-nums {
    --tw-numeric-figure: lining-nums;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
  }
  .ordinal {
    --tw-ordinal: ordinal;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
  }
  .proportional-nums {
    --tw-numeric-spacing: proportional-nums;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
  }
  .tabular-nums {
    --tw-numeric-spacing: tabular-nums;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
  }
  .normal-nums {
    font-variant-numeric: normal;
  }
  .line-through {
    text-decoration-line: line-through;
  }
  .no-underline {
    text-decoration-line: none;
  }
  .overline {
    text-decoration-line: overline;
  }
  .underline {
    text-decoration-line: underline;
  }
  .antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-10 {
    opacity: 10%;
  }
  .opacity-50 {
    opacity: 50%;
  }
  .opacity-\[0\.025\] {
    opacity: 0.025;
  }
  .mix-blend-multiply {
    mix-blend-mode: multiply;
  }
  .mix-blend-normal {
    mix-blend-mode: normal;
  }
  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-2 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .outline-1 {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .outline-black {
    outline-color: var(--color-black);
  }
  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .brightness-90 {
    --tw-brightness: brightness(90%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .brightness-\[1\.75\] {
    --tw-brightness: brightness(1.75);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .drop-shadow {
    --tw-drop-shadow-size: drop-shadow(0 1px 2px var(--tw-drop-shadow-color, rgb(0 0 0 / 0.1))) drop-shadow(0 1px 1px var(--tw-drop-shadow-color, rgb(0 0 0 / 0.06)));
    --tw-drop-shadow: drop-shadow(0 1px 2px rgb(0 0 0 / 0.1)) drop-shadow( 0 1px 1px rgb(0 0 0 / 0.06));
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .grayscale {
    --tw-grayscale: grayscale(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .grayscale-0 {
    --tw-grayscale: grayscale(0%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .grayscale-\[50\%\] {
    --tw-grayscale: grayscale(50%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .invert {
    --tw-invert: invert(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .sepia {
    --tw-sepia: sepia(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .backdrop-blur {
    --tw-backdrop-blur: blur(8px);
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-grayscale {
    --tw-backdrop-grayscale: grayscale(100%);
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-invert {
    --tw-backdrop-invert: invert(100%);
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-sepia {
    --tw-backdrop-sepia: sepia(100%);
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-filter {
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .delay-0 {
    transition-delay: 0ms;
  }
  .delay-150 {
    transition-delay: 150ms;
  }
  .duration-0 {
    --tw-duration: 0ms;
    transition-duration: 0ms;
  }
  .duration-150 {
    --tw-duration: 150ms;
    transition-duration: 150ms;
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .content-\[\'hello\'\] {
    --tw-content: 'hello';
    content: var(--tw-content);
  }
  .content-\[attr\(data-content\)\] {
    --tw-content: attr(data-content);
    content: var(--tw-content);
  }
  .forced-color-adjust-auto {
    forced-color-adjust: auto;
  }
  .forced-color-adjust-none {
    forced-color-adjust: none;
  }
  .\!\[some\:another\] {
    some: another !important;
  }
  .\!\[some\:prop\] {
    some: prop !important;
  }
  .\[-unknown-prop\:url\(https\:\/\/hi\.com\)\] {
    -unknown-prop: url(https://hi.com);
  }
  .\[dateof\:3\.3\.8\] {
    dateof: 3.3.8;
  }
  .\[dateof\:3\.6\.0\] {
    dateof: 3.6.0;
  }
  .\[exec\:nosuchcommand\] {
    exec: nosuchcommand;
  }
  .\[exec\:prog\] {
    exec: prog;
  }
  .\[filename\:line\] {
    filename: line;
  }
  .\[i\:2\] {
    i: 2;
  }
  .\[i\:j\] {
    i: j;
  }
  .\[m\:\=N\] {
    m: =N;
  }
  .\[paint-order\:markers\] {
    paint-order: markers;
  }
  .\[paint-order\:normal\] {
    paint-order: normal;
  }
  .\[rows\:\%v\] {
    rows: %v;
  }
  .\[some\:one\] {
    some: one;
  }
  .\[some\:other\] {
    some: other;
  }
  .divide-x-reverse {
    :where(& > :not(:last-child)) {
      --tw-divide-x-reverse: 1;
    }
  }
  .\*\:p-10 {
    :is(& > *) {
      padding: calc(var(--spacing) * 10);
    }
  }
  .\*\:p-20 {
    :is(& > *) {
      padding: calc(var(--spacing) * 20);
    }
  }
  .group-read-only\:p-2 {
    &:is(:where(.group):read-only *) {
      padding: calc(var(--spacing) * 2);
    }
  }
  .group-read-only\:p-3 {
    &:is(:where(.group):read-only *) {
      padding: calc(var(--spacing) * 3);
    }
  }
  .group-empty\:p-2 {
    &:is(:where(.group):empty *) {
      padding: calc(var(--spacing) * 2);
    }
  }
  .group-empty\:p-3 {
    &:is(:where(.group):empty *) {
      padding: calc(var(--spacing) * 3);
    }
  }
  .group-has-\[\[data-sidebar\=menu-action\]\]\/menu-item\:pr-6 {
    &:is(:where(.group\/menu-item):has(*:is([data-sidebar=menu-action])) *) {
      padding-right: calc(var(--spacing) * 6);
    }
  }
  .group-has-\[\[data-sidebar\=menu-action\]\]\/menu-item\:pr-8 {
    &:is(:where(.group\/menu-item):has(*:is([data-sidebar=menu-action])) *) {
      padding-right: calc(var(--spacing) * 8);
    }
  }
  .peer-empty\:p-2 {
    &:is(:where(.peer):empty ~ *) {
      padding: calc(var(--spacing) * 2);
    }
  }
  .peer-empty\:p-3 {
    &:is(:where(.peer):empty ~ *) {
      padding: calc(var(--spacing) * 3);
    }
  }
  .read-only\:p-2 {
    &:read-only {
      padding: calc(var(--spacing) * 2);
    }
  }
  .read-only\:p-3 {
    &:read-only {
      padding: calc(var(--spacing) * 3);
    }
  }
  .empty\:p-2 {
    &:empty {
      padding: calc(var(--spacing) * 2);
    }
  }
  .empty\:p-3 {
    &:empty {
      padding: calc(var(--spacing) * 3);
    }
  }
  .focus-within\:block {
    &:focus-within {
      display: block;
    }
  }
  .focus-within\:inline {
    &:focus-within {
      display: inline;
    }
  }
  .hover\:left-1 {
    &:hover {
      @media (hover: hover) {
        left: calc(var(--spacing) * 1);
      }
    }
  }
  .hover\:m-\[2px\] {
    &:hover {
      @media (hover: hover) {
        margin: 2px;
      }
    }
  }
  .hover\:m-\[length\:var\(--c\)\] {
    &:hover {
      @media (hover: hover) {
        margin: var(--c);
      }
    }
  }
  .hover\:block {
    &:hover {
      @media (hover: hover) {
        display: block;
      }
    }
  }
  .hover\:inline {
    &:hover {
      @media (hover: hover) {
        display: inline;
      }
    }
  }
  .hover\:overflow-x-hidden {
    &:hover {
      @media (hover: hover) {
        overflow-x: hidden;
      }
    }
  }
  .hover\:bg-red-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-500);
      }
    }
  }
  .hover\:bg-red-500\/90 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(63.7% 0.237 25.331) 90%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-red-500) 90%, transparent);
        }
      }
    }
  }
  .hover\:bg-red-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-600);
      }
    }
  }
  .hover\:bg-sky-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-sky-700);
      }
    }
  }
  .hover\:\[paint-order\:markers\] {
    &:hover {
      @media (hover: hover) {
        paint-order: markers;
      }
    }
  }
  .hover\:\[paint-order\:normal\] {
    &:hover {
      @media (hover: hover) {
        paint-order: normal;
      }
    }
  }
  .hover\:\*\:p-10 {
    &:hover {
      @media (hover: hover) {
        :is(& > *) {
          padding: calc(var(--spacing) * 10);
        }
      }
    }
  }
  .hover\:\*\:p-20 {
    &:hover {
      @media (hover: hover) {
        :is(& > *) {
          padding: calc(var(--spacing) * 20);
        }
      }
    }
  }
  .hover\:group-empty\:p-2 {
    &:hover {
      @media (hover: hover) {
        &:is(:where(.group):empty *) {
          padding: calc(var(--spacing) * 2);
        }
      }
    }
  }
  .hover\:group-empty\:p-3 {
    &:hover {
      @media (hover: hover) {
        &:is(:where(.group):empty *) {
          padding: calc(var(--spacing) * 3);
        }
      }
    }
  }
  .hover\:empty\:p-2 {
    &:hover {
      @media (hover: hover) {
        &:empty {
          padding: calc(var(--spacing) * 2);
        }
      }
    }
  }
  .hover\:empty\:p-3 {
    &:hover {
      @media (hover: hover) {
        &:empty {
          padding: calc(var(--spacing) * 3);
        }
      }
    }
  }
  .focus\:\!block {
    &:focus {
      display: block !important;
    }
  }
  .focus\:\!inline {
    &:focus {
      display: inline !important;
    }
  }
  .focus\:block {
    &:focus {
      display: block;
    }
  }
  .focus\:inline {
    &:focus {
      display: inline;
    }
  }
  .focus\:hover\:inset-x-1 {
    &:focus {
      &:hover {
        @media (hover: hover) {
          inset-inline: calc(var(--spacing) * 1);
        }
      }
    }
  }
  .hover\:focus\:-right-1 {
    &:hover {
      @media (hover: hover) {
        &:focus {
          right: calc(var(--spacing) * -1);
        }
      }
    }
  }
  .focus\:hover\:m-\[length\:var\(--c\)\] {
    &:focus {
      &:hover {
        @media (hover: hover) {
          margin: var(--c);
        }
      }
    }
  }
  .hover\:focus\:m-\[2px\] {
    &:hover {
      @media (hover: hover) {
        &:focus {
          margin: 2px;
        }
      }
    }
  }
  .focus\:hover\:inline {
    &:focus {
      &:hover {
        @media (hover: hover) {
          display: inline;
        }
      }
    }
  }
  .hover\:focus\:block {
    &:hover {
      @media (hover: hover) {
        &:focus {
          display: block;
        }
      }
    }
  }
  .hover\:focus\:inline {
    &:hover {
      @media (hover: hover) {
        &:focus {
          display: inline;
        }
      }
    }
  }
  .focus\:hover\:bg-red-500 {
    &:focus {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-red-500);
        }
      }
    }
  }
  .hover\:focus\:bg-red-500 {
    &:hover {
      @media (hover: hover) {
        &:focus {
          background-color: var(--color-red-500);
        }
      }
    }
  }
  .focus\:hover\:\[paint-order\:normal\] {
    &:focus {
      &:hover {
        @media (hover: hover) {
          paint-order: normal;
        }
      }
    }
  }
  .hover\:focus\:\[paint-order\:markers\] {
    &:hover {
      @media (hover: hover) {
        &:focus {
          paint-order: markers;
        }
      }
    }
  }
  .supports-\[display\:grid\]\:flex {
    @supports (display:grid) {
      display: flex;
    }
  }
  .supports-\[display\:grid\]\:grid {
    @supports (display:grid) {
      display: grid;
    }
  }
  .\[\&_div\]\:line-through {
    & div {
      text-decoration-line: line-through;
    }
  }
  .\[\&\>\*\]\:\[color\:blue\] {
    &>* {
      color: blue;
    }
  }
  .\[\&\>\*\]\:\[color\:red\] {
    &>* {
      color: red;
    }
  }
  .\[\&\>\*\]\:line-through {
    &>* {
      text-decoration-line: line-through;
    }
  }
  .\[\&\>\*\]\:underline {
    &>* {
      text-decoration-line: underline;
    }
  }
  .\[\&\>\*\]\:hover\:line-through {
    &>* {
      &:hover {
        @media (hover: hover) {
          text-decoration-line: line-through;
        }
      }
    }
  }
  .hover\:\[\&\>\*\]\:underline {
    &:hover {
      @media (hover: hover) {
        &>* {
          text-decoration-line: underline;
        }
      }
    }
  }
  .dark\:hover\:lg\:\[\&\>\*\]\:line-through {
    @media (prefers-color-scheme: dark) {
      &:hover {
        @media (hover: hover) {
          @media (width >= 64rem) {
            &>* {
              text-decoration-line: line-through;
            }
          }
        }
      }
    }
  }
  .dark\:lg\:hover\:\[\&\>\*\]\:line-through {
    @media (prefers-color-scheme: dark) {
      @media (width >= 64rem) {
        &:hover {
          @media (hover: hover) {
            &>* {
              text-decoration-line: line-through;
            }
          }
        }
      }
    }
  }
  .dark\:lg\:hover\:\[\&\>\*\]\:underline {
    @media (prefers-color-scheme: dark) {
      @media (width >= 64rem) {
        &:hover {
          @media (hover: hover) {
            &>* {
              text-decoration-line: underline;
            }
          }
        }
      }
    }
  }
  .\[\&\>\*\]\:\[\&_div\]\:line-through {
    &>* {
      & div {
        text-decoration-line: line-through;
      }
    }
  }
  .\[\&\>\*\]\:\[\&_div\]\:underline {
    &>* {
      & div {
        text-decoration-line: underline;
      }
    }
  }
  .\[\&_div\]\:\[\&\>\*\]\:line-through {
    & div {
      &>* {
        text-decoration-line: line-through;
      }
    }
  }
  .\[\&\[data-open\]\]\:line-through {
    &[data-open] {
      text-decoration-line: line-through;
    }
  }
  .\[\&\[data-open\]\]\:underline {
    &[data-open] {
      text-decoration-line: underline;
    }
  }
}
body {
  background-color: var(--color-gray-50);
  font-family: var(--font-sans);
  color: var(--color-gray-900);
}
.main-container {
  margin-inline: auto;
  max-width: var(--container-7xl);
  padding-inline: calc(var(--spacing) * 4);
  padding-block: calc(var(--spacing) * 8);
}
.btn-primary {
  display: inline-flex;
  align-items: center;
  border-radius: var(--radius-md);
  border-style: var(--tw-border-style);
  border-width: 1px;
  border-color: transparent;
  background-color: var(--color-blue-600);
  padding-inline: calc(var(--spacing) * 4);
  padding-block: calc(var(--spacing) * 2);
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
  --tw-font-weight: var(--font-weight-medium);
  font-weight: var(--font-weight-medium);
  color: var(--color-white);
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
  --tw-duration: 200ms;
  transition-duration: 200ms;
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-blue-700);
    }
  }
  &:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
  &:disabled {
    cursor: not-allowed;
  }
  &:disabled {
    opacity: 50%;
  }
}
.btn-secondary {
  display: inline-flex;
  align-items: center;
  border-radius: var(--radius-md);
  border-style: var(--tw-border-style);
  border-width: 1px;
  border-color: var(--color-gray-300);
  background-color: var(--color-white);
  padding-inline: calc(var(--spacing) * 4);
  padding-block: calc(var(--spacing) * 2);
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
  --tw-font-weight: var(--font-weight-medium);
  font-weight: var(--font-weight-medium);
  color: var(--color-gray-700);
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
  --tw-duration: 200ms;
  transition-duration: 200ms;
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-gray-50);
    }
  }
  &:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
  &:disabled {
    cursor: not-allowed;
  }
  &:disabled {
    opacity: 50%;
  }
}
.btn-danger {
  display: inline-flex;
  align-items: center;
  border-radius: var(--radius-md);
  border-style: var(--tw-border-style);
  border-width: 1px;
  border-color: transparent;
  background-color: var(--color-red-600);
  padding-inline: calc(var(--spacing) * 4);
  padding-block: calc(var(--spacing) * 2);
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
  --tw-font-weight: var(--font-weight-medium);
  font-weight: var(--font-weight-medium);
  color: var(--color-white);
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
  --tw-duration: 200ms;
  transition-duration: 200ms;
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-red-700);
    }
  }
  &:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
  &:disabled {
    cursor: not-allowed;
  }
  &:disabled {
    opacity: 50%;
  }
}
.btn-link {
  display: inline-flex;
  align-items: center;
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
  --tw-font-weight: var(--font-weight-medium);
  font-weight: var(--font-weight-medium);
  color: var(--color-gray-600);
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
  --tw-duration: 200ms;
  transition-duration: 200ms;
  &:hover {
    @media (hover: hover) {
      color: var(--color-gray-900);
    }
  }
  &:focus {
    text-decoration-line: underline;
  }
  &:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
}
.btn-link-primary {
  display: inline-flex;
  align-items: center;
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
  --tw-font-weight: var(--font-weight-medium);
  font-weight: var(--font-weight-medium);
  color: var(--color-blue-600);
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
  --tw-duration: 200ms;
  transition-duration: 200ms;
  &:hover {
    @media (hover: hover) {
      color: var(--color-blue-800);
    }
  }
  &:focus {
    text-decoration-line: underline;
  }
  &:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
}
.btn-link-danger {
  display: inline-flex;
  align-items: center;
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
  --tw-font-weight: var(--font-weight-medium);
  font-weight: var(--font-weight-medium);
  color: var(--color-red-600);
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
  --tw-duration: 200ms;
  transition-duration: 200ms;
  &:hover {
    @media (hover: hover) {
      color: var(--color-red-800);
    }
  }
  &:focus {
    text-decoration-line: underline;
  }
  &:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
}
.btn-link-warning {
  display: inline-flex;
  align-items: center;
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
  --tw-font-weight: var(--font-weight-medium);
  font-weight: var(--font-weight-medium);
  color: var(--color-orange-600);
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
  --tw-duration: 200ms;
  transition-duration: 200ms;
  &:hover {
    @media (hover: hover) {
      color: var(--color-orange-800);
    }
  }
  &:focus {
    text-decoration-line: underline;
  }
  &:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
}
.form-input {
  display: block;
  width: 100%;
  border-radius: var(--radius-md);
  border-style: var(--tw-border-style);
  border-width: 1px;
  border-color: var(--color-gray-300);
  padding-inline: calc(var(--spacing) * 3);
  padding-block: calc(var(--spacing) * 2);
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
  &::placeholder {
    color: var(--color-gray-400);
  }
  --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  &:focus {
    border-color: var(--color-blue-500);
  }
  &:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
}
.form-textarea {
  display: block;
  width: 100%;
  resize: vertical;
  border-radius: var(--radius-md);
  border-style: var(--tw-border-style);
  border-width: 1px;
  border-color: var(--color-gray-300);
  padding-inline: calc(var(--spacing) * 3);
  padding-block: calc(var(--spacing) * 2);
  font-family: var(--font-mono);
  font-size: var(--text-xs);
  line-height: var(--tw-leading, var(--text-xs--line-height));
  &::placeholder {
    color: var(--color-gray-400);
  }
  --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  &:focus {
    border-color: var(--color-blue-500);
  }
  &:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
}
.form-label {
  margin-bottom: calc(var(--spacing) * 1);
  display: block;
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
  --tw-font-weight: var(--font-weight-semibold);
  font-weight: var(--font-weight-semibold);
  color: var(--color-gray-700);
}
.form-group {
  margin-bottom: calc(var(--spacing) * 4);
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
}
.project-grid {
  display: grid;
  grid-template-columns: repeat(1, minmax(0, 1fr));
  gap: calc(var(--spacing) * 6);
  @media (width >= 48rem) {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  @media (width >= 64rem) {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}
.project-card {
  position: relative;
  display: flex;
  flex-direction: column;
  border-radius: var(--radius-lg);
  border-style: var(--tw-border-style);
  border-width: 1px;
  border-color: var(--color-gray-200);
  background-color: var(--color-white);
  padding: calc(var(--spacing) * 6);
  --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  transition-property: box-shadow;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
  --tw-duration: 200ms;
  transition-duration: 200ms;
  &:hover {
    @media (hover: hover) {
      --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
}
.project-card-header {
  margin-bottom: calc(var(--spacing) * 4);
  display: flex;
  flex: 1;
  align-items: flex-start;
  justify-content: space-between;
}
.project-name {
  margin-bottom: calc(var(--spacing) * 2);
  font-size: var(--text-2xl);
  line-height: var(--tw-leading, var(--text-2xl--line-height));
  --tw-font-weight: var(--font-weight-semibold);
  font-weight: var(--font-weight-semibold);
  color: var(--color-gray-900);
}
.project-url {
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
  word-break: break-all;
  color: var(--color-blue-600);
  &:hover {
    @media (hover: hover) {
      color: var(--color-blue-800);
    }
  }
}
.project-commit {
  margin-top: calc(var(--spacing) * 1);
  font-family: var(--font-mono);
  font-size: var(--text-xs);
  line-height: var(--tw-leading, var(--text-xs--line-height));
  color: var(--color-gray-500);
}
.project-status {
  position: absolute;
  top: calc(var(--spacing) * 4);
  right: calc(var(--spacing) * 4);
}
.status-pill {
  display: inline-flex;
  align-items: center;
  border-radius: calc(infinity * 1px);
  padding-inline: calc(var(--spacing) * 2);
  padding-block: calc(var(--spacing) * 1);
  font-size: var(--text-xs);
  line-height: var(--tw-leading, var(--text-xs--line-height));
  --tw-font-weight: var(--font-weight-medium);
  font-weight: var(--font-weight-medium);
}
.status-running {
  background-color: var(--color-green-100);
  color: var(--color-green-800);
}
.status-stopped {
  background-color: var(--color-gray-100);
  color: var(--color-gray-800);
}
.status-error {
  background-color: var(--color-red-100);
  color: var(--color-red-800);
}
.project-actions {
  margin-top: auto;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: calc(var(--spacing) * 1);
  border-top-style: var(--tw-border-style);
  border-top-width: 1px;
  border-color: var(--color-gray-200);
  padding-top: calc(var(--spacing) * 4);
}
.action-button, .action-button-inline {
  display: inline-flex;
  align-items: center;
  border-radius: 0.25rem;
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
  --tw-font-weight: var(--font-weight-medium);
  font-weight: var(--font-weight-medium);
  text-decoration-line: none;
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
  --tw-duration: 200ms;
  transition-duration: 200ms;
}
.action-button {
  padding-inline: calc(var(--spacing) * 2);
  padding-block: calc(var(--spacing) * 1);
}
.action-button:focus, .action-button:active, .action-button:hover, .action-button-inline:focus, .action-button-inline:active, .action-button-inline:hover {
  text-decoration-line: none;
}
.btn-link-primary:hover {
  background-color: var(--color-blue-50);
}
.btn-link-danger:hover {
  background-color: var(--color-red-50);
}
.btn-link-warning:hover {
  background-color: var(--color-orange-50);
}
.btn-link:hover {
  background-color: var(--color-gray-50);
}
.btn-link-success:hover {
  background-color: var(--color-green-50);
}
.action-button .icon-sm, .action-button-inline .icon-sm {
  margin-right: calc(var(--spacing) * 1);
}
.action-button svg, .action-button-inline svg {
  height: calc(var(--spacing) * 4);
  width: calc(var(--spacing) * 4);
}
.empty-state {
  padding-block: calc(var(--spacing) * 12);
  text-align: center;
}
.empty-state-icon {
  margin-inline: auto;
  margin-bottom: calc(var(--spacing) * 4);
  height: calc(var(--spacing) * 16);
  width: calc(var(--spacing) * 16);
  color: var(--color-gray-400);
}
.empty-state-title {
  margin-bottom: calc(var(--spacing) * 2);
  font-size: var(--text-lg);
  line-height: var(--tw-leading, var(--text-lg--line-height));
  --tw-font-weight: var(--font-weight-medium);
  font-weight: var(--font-weight-medium);
  color: var(--color-gray-900);
}
.empty-state-description {
  margin-bottom: calc(var(--spacing) * 6);
  color: var(--color-gray-600);
}
.modal {
  position: fixed;
  inset: calc(var(--spacing) * 0);
  z-index: 50;
  overflow-y: auto;
}
.modal-backdrop {
  position: fixed;
  inset: calc(var(--spacing) * 0);
  background-color: color-mix(in srgb, oklch(55.1% 0.027 264.364) 75%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-gray-500) 75%, transparent);
  }
  transition-property: opacity;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.modal-container {
  display: flex;
  min-height: 100%;
  align-items: center;
  justify-content: center;
  padding: calc(var(--spacing) * 4);
  text-align: center;
}
.modal-panel {
  position: relative;
  transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  overflow: hidden;
  border-radius: var(--radius-lg);
  background-color: var(--color-white);
  padding-inline: calc(var(--spacing) * 4);
  padding-top: calc(var(--spacing) * 5);
  padding-bottom: calc(var(--spacing) * 4);
  text-align: left;
  --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  transition-property: all;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
  @media (width >= 40rem) {
    margin-block: calc(var(--spacing) * 8);
  }
  @media (width >= 40rem) {
    width: 100%;
  }
  @media (width >= 40rem) {
    max-width: var(--container-lg);
  }
  @media (width >= 40rem) {
    padding: calc(var(--spacing) * 6);
  }
}
.modal-panel-large {
  position: relative;
  transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  overflow: hidden;
  border-radius: var(--radius-lg);
  background-color: var(--color-white);
  padding-inline: calc(var(--spacing) * 6);
  padding-top: calc(var(--spacing) * 6);
  padding-bottom: calc(var(--spacing) * 6);
  text-align: left;
  --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  transition-property: all;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
  @media (width >= 40rem) {
    margin-block: calc(var(--spacing) * 4);
  }
  @media (width >= 40rem) {
    width: 100%;
  }
  @media (width >= 40rem) {
    max-width: var(--container-4xl);
  }
  @media (width >= 40rem) {
    padding: calc(var(--spacing) * 8);
  }
}
.modal-header {
  margin-bottom: calc(var(--spacing) * 4);
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.modal-title {
  font-size: var(--text-lg);
  line-height: var(--tw-leading, var(--text-lg--line-height));
  --tw-font-weight: var(--font-weight-semibold);
  font-weight: var(--font-weight-semibold);
  color: var(--color-gray-900);
}
.modal-close {
  color: var(--color-gray-400);
  &:hover {
    @media (hover: hover) {
      color: var(--color-gray-600);
    }
  }
  &:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
}
.modal-body {
  margin-bottom: calc(var(--spacing) * 6);
}
.modal-footer {
  display: flex;
  justify-content: flex-end;
  :where(& > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
  }
}
.code-block {
  max-height: calc(var(--spacing) * 96);
  overflow-x: auto;
  overflow-y: auto;
  border-radius: var(--radius-lg);
  background-color: var(--color-gray-900);
  padding: calc(var(--spacing) * 4);
  font-family: var(--font-mono);
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
  color: var(--color-gray-100);
}
.code-block-scrollable {
  max-height: calc(var(--spacing) * 80);
  overflow-y: auto;
}
.config-code-block, .deploy-code-block, .stop-code-block, .logs-code-block {
  overflow-x: auto;
  overflow-y: auto;
  border-radius: var(--radius-lg);
  background-color: var(--color-gray-800);
  padding: calc(var(--spacing) * 4);
  font-family: var(--font-mono);
  font-size: var(--text-xs);
  line-height: var(--tw-leading, var(--text-xs--line-height));
  color: var(--color-gray-300);
  min-height: 500px;
  max-height: 50vh;
}
.deploy-output-container, .stop-output-container, .logs-output-container {
  position: relative;
}
.deploy-text-frontend-generic {
  color: var(--color-gray-400);
  font-style: italic;
}
.deploy-text-frontend-success {
  color: var(--color-green-400);
  font-style: italic;
}
.deploy-text-frontend-error {
  color: var(--color-red-400);
  font-style: italic;
}
.deploy-text-backend {
  color: var(--color-gray-300);
}
.deploy-text-info {
  color: var(--color-gray-400);
  font-style: italic;
}
.deploy-text-success {
  color: var(--color-green-400);
  font-style: italic;
}
.deploy-text-error {
  color: var(--color-red-400);
  font-style: italic;
}
.streaming-output {
  white-space: pre;
}
.success-text {
  color: var(--color-green-400);
}
.error-text {
  color: var(--color-red-400);
}
.site-header {
  border-bottom-style: var(--tw-border-style);
  border-bottom-width: 1px;
  border-color: var(--color-gray-200);
  background-color: var(--color-white);
}
.header-content {
  margin-inline: auto;
  display: flex;
  max-width: var(--container-7xl);
  align-items: center;
  justify-content: space-between;
  padding-inline: calc(var(--spacing) * 4);
  padding-block: calc(var(--spacing) * 4);
}
.site-logo {
  display: flex;
  align-items: center;
}
.logo-text {
  font-size: var(--text-2xl);
  line-height: var(--tw-leading, var(--text-2xl--line-height));
  --tw-font-weight: var(--font-weight-bold);
  font-weight: var(--font-weight-bold);
  color: var(--color-gray-900);
}
.logo-tagline {
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
  color: var(--color-gray-600);
}
.site-footer {
  margin-top: calc(var(--spacing) * 16);
  border-top-style: var(--tw-border-style);
  border-top-width: 1px;
  border-color: var(--color-gray-200);
  background-color: var(--color-white);
}
.footer-content {
  margin-inline: auto;
  display: flex;
  max-width: var(--container-7xl);
  align-items: center;
  justify-content: space-between;
  padding-inline: calc(var(--spacing) * 4);
  padding-block: calc(var(--spacing) * 6);
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
  color: var(--color-gray-600);
}
.footer-links {
  display: flex;
  :where(& > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 6) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-x-reverse)));
  }
}
.footer-link {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
  --tw-duration: 200ms;
  transition-duration: 200ms;
  &:hover {
    @media (hover: hover) {
      color: var(--color-gray-900);
    }
  }
}
.icon-sm {
  height: calc(var(--spacing) * 4);
  width: calc(var(--spacing) * 4);
}
.icon-md {
  height: calc(var(--spacing) * 5);
  width: calc(var(--spacing) * 5);
}
.icon-lg {
  height: calc(var(--spacing) * 6);
  width: calc(var(--spacing) * 6);
}
.icon-xl {
  height: calc(var(--spacing) * 8);
  width: calc(var(--spacing) * 8);
}
.loading-spinner {
  animation: var(--animate-spin);
}
.auth-fields {
  margin-top: calc(var(--spacing) * 4);
  :where(& > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
  }
}
.test-connection-result {
  margin-top: calc(var(--spacing) * 2);
  display: flex;
  align-items: center;
}
.test-success {
  color: var(--color-green-600);
}
.test-error {
  color: var(--color-red-600);
}
.discovery-results {
  margin-top: calc(var(--spacing) * 4);
  border-radius: var(--radius-md);
  background-color: var(--color-gray-50);
  padding: calc(var(--spacing) * 4);
}
.discovery-title {
  margin-bottom: calc(var(--spacing) * 2);
  --tw-font-weight: var(--font-weight-medium);
  font-weight: var(--font-weight-medium);
  color: var(--color-gray-900);
}
.discovery-files {
  :where(& > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
  }
}
.discovery-file {
  font-family: var(--font-mono);
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
  color: var(--color-gray-600);
}
@media (max-width: 640px) {
  .project-actions {
    flex-direction: column;
    gap: calc(var(--spacing) * 0);
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .project-actions .action-button {
    justify-content: center;
  }
  .modal-panel {
    margin-inline: calc(var(--spacing) * 4);
    width: auto;
  }
}
.monospace {
  font-family: var(--font-mono);
}
.result-indicator {
  display: inline-flex;
  align-items: center;
  border-radius: 0.25rem;
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
  --tw-font-weight: var(--font-weight-medium);
  font-weight: var(--font-weight-medium);
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
  --tw-duration: 200ms;
  transition-duration: 200ms;
}
.result-indicator.success {
  background-color: var(--color-green-50);
  color: var(--color-green-600);
}
.result-indicator.error {
  background-color: var(--color-red-50);
  color: var(--color-red-600);
}
.htmx-indicator {
  display: none;
}
.htmx-request .htmx-indicator {
  display: inline;
}
.htmx-request .htmx-indicator-hide {
  display: none;
}
.auth-fields {
  display: none;
}
.auth-container:has(input[name='auth_method'][value='http']:checked) .auth-http {
  display: block;
}
.auth-container:has(input[name='auth_method'][value='ssh']:checked) .auth-ssh {
  display: block;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-pan-x {
  syntax: "*";
  inherits: false;
}
@property --tw-pan-y {
  syntax: "*";
  inherits: false;
}
@property --tw-pinch-zoom {
  syntax: "*";
  inherits: false;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-divide-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-ordinal {
  syntax: "*";
  inherits: false;
}
@property --tw-slashed-zero {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-figure {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-spacing {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-fraction {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  inherits: false;
  initial-value: "";
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-pan-x: initial;
      --tw-pan-y: initial;
      --tw-pinch-zoom: initial;
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-divide-x-reverse: 0;
      --tw-border-style: solid;
      --tw-divide-y-reverse: 0;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-ordinal: initial;
      --tw-slashed-zero: initial;
      --tw-numeric-figure: initial;
      --tw-numeric-spacing: initial;
      --tw-numeric-fraction: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-content: "";
    }
  }
}
