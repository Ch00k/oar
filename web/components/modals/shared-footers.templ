package modals

// CloseOnlyFooter renders a footer with just a close button
templ CloseOnlyFooter() {
	<button
		type="button"
		class="btn-secondary"
		onclick="closeModal('modal-container')"
	>
		Close
	</button>
}

// CancelActionFooter renders a footer with cancel and action buttons for delete operations
templ CancelActionFooter(actionLabel, actionClass, hxDelete, hxTarget, hxSwap string) {
	<button
		type="button"
		class="btn-secondary"
		onclick="closeModal('modal-container')"
	>
		Cancel
	</button>
	<button
		type="button"
		class={ actionClass }
		hx-delete={ hxDelete }
		hx-target={ hxTarget }
		hx-swap={ hxSwap }
	>
		{ actionLabel }
	</button>
}

// FormFooter renders a footer for forms with cancel and submit buttons
templ FormFooter(actionLabel string) {
	<button
		type="button"
		class="btn-secondary"
		onclick="closeModal('modal-container')"
	>
		Cancel
	</button>
	<button
		type="submit"
		class="btn-primary"
		form="project-form"
	>
		{ actionLabel }
	</button>
}

// StreamingActionFooter renders a footer with close and action button for streaming modals
templ StreamingActionFooter(actionLabel, actionId, projectId string) {
	<button
		type="button"
		class="btn-secondary"
		onclick="closeModal('modal-container')"
	>
		Close
	</button>
	<button
		type="button"
		id={ actionId }
		class="btn-primary"
		data-project-id={ projectId }
	>
		{ actionLabel }
	</button>
}

// LogsFooter renders a footer with auto-scroll toggle and close button for logs modal
templ LogsFooter() {
	<div class="flex justify-between items-center w-full">
		<label class="flex items-center cursor-pointer">
			<input
				type="checkbox"
				id="auto-scroll-checkbox"
				class="h-4 w-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500"
				checked
				onchange="toggleAutoScroll()"
			/>
			<span class="ml-2 text-sm text-gray-700">Auto-scroll</span>
		</label>
		<button
			type="button"
			class="btn-secondary"
			onclick="closeModal('modal-container')"
		>
			Close
		</button>
	</div>
}
